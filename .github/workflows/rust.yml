name: Rust

on:
  push:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: i686-pc-windows-msvc
            use-cross: false

          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   use-cross: false

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            use-cross: false

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            use-cross: true

          - os: ubuntu-latest
            target: aarch64-linux-android
            use-cross: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: cache
        uses: Swatinem/rust-cache@v1

      - name: Set Android NDK linker path [Android (aarch64)]
        run: echo "$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH
        if: ${{ matrix.target == 'aarch64-linux-android' }}

      - name: Install musl-gcc
        if: matrix.target == 'x86_64-unknown-linux-musl' ||
          matrix.target == 'aarch64-unknown-linux-musl'
        run: |
          sudo apt install musl-tools libssl-dev pkg-config
          export RUSTFLAGS="-C link-arg=-lgcc -Clink-arg=-static-libgcc"

#       - name: Install cross
#         uses: taiki-e/install-action@cross

      - name: Build
#         if: matrix.use-cross == false
        run: cargo build --target ${{ matrix.target }} --release --locked --verbose
#       - name: Build cross
#         if: matrix.use-cross == true
#         run: cross build --target ${{ matrix.target }} --release --locked --verbose

      - name: move
        run: mv target/${{ matrix.target }}/release/geph4-client* ./
        
      - name: Package Linux
        if: matrix.os == 'ubuntu-latest'
        run: tar czf geph4-client-${{ matrix.target }}.tar.gz geph4-client
        
      - name: Package Windows
        if: matrix.os == 'windows-latest'
        run: 7z a geph4-client-${{ matrix.target }}.zip geph4-client.exe

      - name: 'Get Previous tag'
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        
      - name: Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: geph4-client*
          
      - name: Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{steps.previous_tag.outputs.tag}}
          files: geph4-client-${{ matrix.target }}*
